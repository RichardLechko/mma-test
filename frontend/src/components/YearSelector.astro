---
interface Props {
  years: string[];
  currentYear: string;
  baseUrl: string;
}
const { years, currentYear, baseUrl } = Astro.props;
---

<div class="year-selector" id="year-selector">
  <div class="year-selector-header">
    <span class="label">Filter by year:</span>
    <div class="selected-year" id="selected-year">
      <span>{currentYear}</span>
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="6 9 12 15 18 9"></polyline>
      </svg>
    </div>
  </div>
  
  <div class="dropdown-menu custom-scrollbar" id="dropdown-menu">
    {years.map(year => (
      <a 
        href={`${baseUrl}${year}`}
        class={`dropdown-item ${year === currentYear ? 'active' : ''}`}
      >
        {year}
      </a>
    ))}
  </div>
</div>

<style>
  .year-selector {
    position: relative;
    user-select: none;
  }
  
  .year-selector-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }
  
  .label {
    color: var(--text-secondary, #a0a0a0);
    font-size: 0.875rem;
  }
  
  .selected-year {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background-color: var(--background-dark, #1e1e1e);
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    cursor: pointer;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
  }
  
  .selected-year:hover {
    background-color: rgba(255, 255, 255, 0.05);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  .selected-year span {
    font-weight: 600;
    color: var(--text-primary, #ffffff);
  }
  
  .selected-year svg {
    transition: transform 0.2s ease;
  }
  
  .year-selector.active .selected-year svg {
    transform: rotate(180deg);
  }
  
  .dropdown-menu {
    position: absolute;
    top: calc(100% + 0.5rem);
    right: 0;
    min-width: 120px;
    background-color: var(--background-dark, #1e1e1e);
    border-radius: 0.375rem;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    overflow: hidden;
    opacity: 0;
    transform-origin: top center;
    transform: translateY(-10px) scale(0.95);
    pointer-events: none;
    transition: all 0.2s cubic-bezier(0.16, 1, 0.3, 1);
    z-index: 10;
    border: 1px solid rgba(255, 255, 255, 0.05);
    max-height: 300px;
    overflow-y: auto;
  }
  
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 3px;
    margin: 4px 0;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 3px;
    transition: background 0.2s ease;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
  }
  
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
  }
  
  .year-selector.active .dropdown-menu {
    opacity: 1;
    transform: translateY(0) scale(1);
    pointer-events: all;
  }
  
  .dropdown-item {
    display: block;
    padding: 0.75rem 1rem;
    text-decoration: none;
    color: var(--text-primary, #ffffff);
    transition: background-color 0.15s ease;
    font-size: 0.9375rem;
  }
  
  .dropdown-item:hover {
    background-color: rgba(255, 255, 255, 0.05);
  }
  
  .dropdown-item.active {
    background-color: var(--primary-color, #6366f1);
    color: white;
    font-weight: 600;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const yearSelector = document.getElementById('year-selector');
    const selectedYear = document.getElementById('selected-year');
    
    if (selectedYear && yearSelector) {
      selectedYear.addEventListener('click', (e) => {
        e.stopPropagation();
        yearSelector.classList.toggle('active');
      });
      
      document.addEventListener('click', (e) => {
        if (!(e.target instanceof Node) || !yearSelector.contains(e.target)) {
          yearSelector.classList.remove('active');
        }
      });
      
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          yearSelector.classList.remove('active');
        }
      });
    }
  });
</script>